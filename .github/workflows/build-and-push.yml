name: Build and Push

on:
  push:
    branches:
      - main
      - main-thesis
    tags:
      - v*

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Install etcd
      run: sudo ./.github/install-etcd.sh
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Prepare
      id: prep
      run: |
        GIT_COMMIT=$(git rev-parse HEAD)
        BUILD_ID=$(date '+%Y%m%d')-$(git rev-parse HEAD | cut -c -5)
        
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        
        DOCKER_IMAGE=${{ secrets.DOCKER_USER }}/${GITHUB_REPOSITORY#*/}
             
        # Use Docker `latest` tag convention     
        [ "$VERSION" == "main" ] && VERSION=latest
        echo $VERSION
        
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        
        # Set output parameters.
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=build_id::${BUILD_ID}
        echo ::set-output name=git_commit::${GIT_COMMIT}
        echo ::set-output name=version::${VERSION}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: arm64,ppc64le
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/ppc64le
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        build-args: imageVersion=${{ steps.prep.outputs.version }},buildId=${{ steps.prep.outputs.build_id }},commitSha=${{ steps.prep.outputs.git_commit }}
